(function() {
    "use strict";
    var lib$dag$map$platform$$platform;

    /* global self */
    if (typeof self === 'object') {
      lib$dag$map$platform$$platform = self;

    /* global global */
    } else if (typeof global === 'object') {
      lib$dag$map$platform$$platform = global;
    } else {
      throw new Error('no global: `self` or `global` found');
    }

    var lib$dag$map$platform$$default = lib$dag$map$platform$$platform;
    function lib$vertex$$Vertex(name) {
      this.name = name;
      this.incoming = {};
      this.incomingNames = [];
      this.hasOutgoing = false;
      this.value = null;
    }
    var lib$vertex$$default = lib$vertex$$Vertex;
    function lib$visit$$visit(vertex, fn, visited, path) {
      var name = vertex.name;
      var vertices = vertex.incoming;
      var names = vertex.incomingNames;
      var len = names.length;
      var i;

      if (!visited) {
        visited = {};
      }
      if (!path) {
        path = [];
      }
      if (visited.hasOwnProperty(name)) {
        return;
      }
      path.push(name);
      visited[name] = true;
      for (i = 0; i 